<?php


/**
 * Implements hook_permission().
 */
function notificare_permission() {
  return array(
    'administer notificare' => array(
      'title' => t('Administer Notificare.'),
      'description' => t(''),
    ),
  );
}


/**
 * Implements hook_menu().
 */
function notificare_menu() {
  $items['admin/config/workflow/notificare'] = array(
    'title' => 'Notificare admin settings',
    'description' => 'Configure Notificare',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('notificare_admin_settings'),
    'access arguments' => array('administer notificare'),
  );

  return $items;
}

/**
 * Implements hook_action_info().
 */
function notificare_action_info() {
  return array(
    'notificare_notify_new_comment_action' => array(
      'label' => t('Send Notificare notification for comment'),
      'type' => 'comment',
      'configurable' => TRUE,
      'triggers' => array('comment_insert'),
    ),
  );
}

/**
 * Display form to configure notification message, when creating the action
 */
function notificare_notify_new_comment_action_form($context) {
  // Set default values for form.
  // Check if we're using tokens and
  if (module_exists('token')) {
    if (!isset($context['notificare_message_subject'])) {
    $context['notificare_message_subject'] = '[site:url-brief] : New comment by [comment:name]';
    }
    if (!isset($context['notificare_message_body'])) {
      $context['notificare_message_body'] = '[comment:title] ';
    }
    $description = t('You can use the tokens shown below.');
  }
  else {
    if (!isset($context['notificare_message_subject'])) {
    $context['notificare_message_subject'] = 'New comment';
    }
    if (!isset($context['notificare_message_body'])) {
      $context['notificare_message_body'] = '';
    }
  }


  $form['notificare_message_subject'] = array(
    '#title' => t('Subject for the message'),
    '#type' => 'textfield',
    '#default_value' => $context['notificare_message_subject'],
    );
  $form['notificare_message_body'] = array(
    '#title' => t('Body of the Notificare message'),
    '#type' => 'textarea',
    '#default_value' => $context['notificare_message_body'],
    );
    if (module_exists('token')) {
      $form['tokens'] = array(
        '#theme' => 'token_tree',
        '#token_types' => array('user', 'comment'),
        '#global_types' => TRUE,
        '#click_insert' => TRUE,
        );
    }
  return $form;
}

/**
 * Submitting the form to configure notification message, when creating the action
 */
function notificare_notify_new_comment_action_submit($form, $form_state) {
  return array(
    'notificare_message_subject' => $form_state['values']['notificare_message_subject'],
    'notificare_message_body' => $form_state['values']['notificare_message_body'],
    );
}

/**
 * Send a notification after action notificare_notify_new_comment_action is triggered
 */
function notificare_notify_new_comment_action(&$entity, $context = array()) {
  // Check if we're using tokens and set default values
  if (module_exists('token')) {
    global $language;
    $subject = token_replace($context['notificare_message_subject'], array('comment' => $entity), array('language' => $language));
    $body = token_replace($context['notificare_message_body'], array('comment' => $entity), array('language' => $language));
  }
  else {
    $subject = $context['notificare_message_subject'];
    $body = $context['notificare_message_body'];
  }
  dsm($body);

  // Set default values
  if (!isset($context['notificare_message_subject'])) {
    $context['notificare_message_subject'] = t('Notificare message');
  }
  if (!isset($context['notificare_message_body'])) {
    $context['notificare_message_body'] = t('New comment posted');
  }

  $payload = array(
    'hook' => 'comment_post',
    'post_title' => $subject,
    'comment_content' => array('body' => $body),
    'comment_author' => 'Peter R. de Vries',
    'post_url' => 'http://test.com/bla',
    'approve_url' => 'http://test.com/bla',
    'spam_url' => 'http://test.com/bla',
    'delete_url' => 'http://test.com/bla',
    'trash_url' => 'http://test.com/bla',
  );


  $result = send_notificare_message($payload);
  dsm($result);
}



function send_notificare_message($payload=array()) {
  $options = array(
                  'method' => 'POST',
                  'body' => $payload,
                  'timeout' => 15,
                  'headers' => array('Content-Type' => 'application/x-www-form-urlencoded'),
          );
  $post_url = variable_get('notificare_post_uri', 'https://apps.notifica.re') . '/' . variable_get('notificare_service', 'hooks/wordpress') . '/' . variable_get('notificare_service_token', '') . '?token=' . variable_get('notificare_user_token', '');
  return drupal_http_request($post_url, $options);
}


/**
 * The admin form to save Service Token and User token.
 * Called from function notificare_menu().
 */
function notificare_admin_settings() {

  $form = array();

  $form['notificare'] = array(
    '#type' => 'fieldset',
    '#title' => t('Notificare Tokens'),
    '#description' => t('If you don\'t have a Notificare account yet,
      <a href="@signupURL">get one first</a>. Otherwise, go straight to your
      <a href="@createseriveURL">Dashboard</a> and create a Drupal service.',
      array(
        '@signupURL' => 'https://notifica.re/sign-up',
        '@createseriveURL' => 'https://notifica.re/dashboard/services',
        )
      ),
    );

  $form['notificare']['notificare_post_uri'] = array(
    '#type' => 'textfield',
    '#title' => t('Notificare Post URI'),
    '#size' => 60,
    '#required' => TRUE,
    '#default_value' => variable_get('notificare_post_uri', 'https://apps.notifica.re'),
    );

  $form['notificare']['notificare_service'] = array(
    '#type' => 'textfield',
    '#title' => t('Notificare Service'),
    '#size' => 60,
    '#required' => TRUE,
    '#default_value' => variable_get('notificare_service', 'hooks/wordpress'),
    );

  $form['notificare']['notificare_service_token'] = array(
    '#type' => 'textfield',
    '#title' => t('Notificare Service Token'),
    '#size' => 60,
    '#required' => TRUE,
    '#default_value' => variable_get('notificare_service_token', ''),
    );

  $form['notificare']['notificare_post_uri'] = array(
    '#type' => 'textfield',
    '#title' => t('Notificare Post URI'),
    '#size' => 60,
    '#required' => TRUE,
    '#default_value' => variable_get('notificare_post_uri', 'https://apps.notifica.re'),
    );

  $form['notificare']['notificare_user_token'] = array(
    '#type' => 'textfield',
    '#title' => t('Notificare User Token'),
    '#default_value' => variable_get('notificare_user_token', ''),
    '#required' => TRUE,
    );

  return system_settings_form($form);
}


/**
 * Implements hook_uninstall().
 */
function notificare_uninstall() {
  variable_del('notificare_post_uri');
  variable_del('notificare_service');
  variable_del('notificare_post_uri');
  variable_del('notificare_user_token');
}